"use server";
// Generated by Copilot

import { randomUUID } from "crypto"; // Generated by Copilot
import { writeFile } from "fs/promises"; // Generated by Copilot
import path from "path"; // Generated by Copilot

export async function validateJson(message: string) {
  // Generated by Copilot
  try {
    const parsed = JSON.parse(message); // Validate JSON
    // Generate a random filename
    const filename = `${randomUUID()}.json`; // Generated by Copilot
    // Store in a 'json_uploads' directory at the project root
    const dir = path.resolve(process.cwd(), "json_uploads"); // Generated by Copilot
    const filePath = path.join(dir, filename); // Generated by Copilot

    // Ensure directory exists
    await import("fs/promises").then(fs =>
      fs.mkdir(dir, { recursive: true })
    ); // Generated by Copilot

    // Write the JSON to the file
    await writeFile(filePath, JSON.stringify(parsed, null, 2), "utf-8"); // Generated by Copilot

    return { valid: true, filename }; // Generated by Copilot
  } catch (e: any) {
    return { valid: false, error: e.message }; // Generated by Copilot
  }
}
// Generated by Copilot